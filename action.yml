name: 'Setup ufbt'
description: 'Configures ufbt for use in the current project'
inputs:
  # ufbt-home:
  #   description: Path to the ufbt home directory
  #   required: false
  #   default: ~/.ufbt
  path:
    description: "Path to source code (if not in the root of repository)"
    required: false
    default: ""
  update-channel:
    description: Release channel to use
    required: false
    default: dev
  ufbt-version:
    description: Version of ufbt to use
    required: false
    default: 0.2.1rc1
outputs:
  fap-artifacts:
    description: "Application build artifacts"
    value: ${{ steps.build-fap.outputs.build_artifacts }}
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install ufbt==${{ inputs.ufbt-version }}
        
    - name: Update ufbt
      shell: bash
      run: |
        ufbt update --channel ${{ inputs.update-channel }}

    - name: Extract ufbt status
      id: ufbt-status
      shell: bash
      run: |
        echo "{ufbt_version}={$(ufbt status ufbt_version)}" >> $GITHUB_OUTPUT
        echo "{sdk_dir}={$(ufbt status sdk_dir)}" >> $GITHUB_OUTPUT
        echo "{toolchain_dir}={$(ufbt status state_dir)/toolchain}" >> $GITHUB_OUTPUT
        echo "{toolchain_version}={`bash -c "export $(grep FBT_TOOLCHAIN_VERSION\= $(ufbt status sdk_dir)/scripts/toolchain/fbtenv.sh) printenv FBT_TOOLCHAIN_VERSION"`}" >> $GITHUB_OUTPUT
        
    - name: Cache toolchain
      uses: actions/cache@v3
      with:
        path: ${{ steps.ufbt-status.outputs.toolchain_dir }}
        key: ${{ runner.os }}-ufbt-toolchain-${{ steps.ufbt-status.outputs.toolchain_version }}

    - name: Set fap source path
      id: set-fap-path
      shell: bash
      run: |
        if [ -z ${{ inputs.path }} ]; then
          echo "{fap_path}=$GITHUB_WORKSPACE" >> $GITHUB_OUTPUT
        else
          echo "{fap_path}=$GITHUB_WORKSPACE/${{ inputs.path }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Build app
      id: build-fap
      shell: bash
      run: |
        pushd ${{ steps.set-fap-path.outputs.fap_path }}
        ufbt
        DIST_PATH=`pwd`/dist
        echo "{build_artifacts}=$(ls $DIST_PATH/*.fap)" >> $GITHUB_OUTPUT

    - name: Upload app artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-artifacts
        path: ${{ steps.build-fap.outputs.build_artifacts }}
